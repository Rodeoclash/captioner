import * as React from "react";
import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";

import { useMachine } from "@xstate/react";
import appFlowMachine from "../services/app_flow_machine";

import { Text, Flex, Box, Heading, Link } from "@chakra-ui/react";

import Introduction from "../components/steps/Introduction";
import AddMedia from "../components/steps/AddMedia";
import PerformJob from "../components/steps/PerformJob";

import type { Job } from "../services/types";

type VoskResult = {
  result: Array<{
    conf: number;
    start: number;
    end: number;
    word: string;
  }>;
  text: string;
};

const Home: NextPage = () => {
  const [appFlowState, appFlowSend] = useMachine(appFlowMachine);
  const [job, setJob] = React.useState<Job | null>(null);

  //const [utterances, setUtterances] = React.useState<VoskResult[]>([]);

  const handleIntroductionContinueClicked = React.useCallback(() => {
    appFlowSend("START");
  }, [appFlowSend]);

  const handleAddMediaContinueClicked = React.useCallback(
    (incomingJob: Job) => {
      setJob(incomingJob);
      appFlowSend("CONTINUE");
    },
    [appFlowSend]
  );

  return (
    <div className={styles.container}>
      <Head>
        <title>Captioner test</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex
        as="header"
        height="4rem"
        align="center"
        justify="center"
        borderBottom="1px"
        borderColor="gray.200"
      >
        <Box maxWidth="1200px" width="100%">
          <Heading as="h1" fontSize="2xl">
            Captioning test
          </Heading>
        </Box>
      </Flex>
      <Flex as="main" height="calc(100vh - 8rem)" justify="center" py="8">
        <Flex maxWidth="1200px" width="100%" align="center" justify="center">
          <Box>
            {appFlowState.value === "introduction" && (
              <Introduction
                onContinue={() => handleIntroductionContinueClicked()}
              />
            )}
            {appFlowState.value === "addMedia" && (
              <AddMedia
                onContinue={(details) => {
                  handleAddMediaContinueClicked(details);
                }}
              />
            )}
            {appFlowState.value === "process" && job !== null && (
              <PerformJob
                job={job}
                onContinue={() => {
                  console.log("test");
                }}
              />
            )}
          </Box>
        </Flex>
      </Flex>
      <Flex
        as="footer"
        height="4rem"
        align="center"
        borderTop="1px"
        borderColor="gray.200"
        justify="center"
      >
        <Box maxWidth="1200px" width="100%">
          <Text fontSize="sm">
            Built by:{" "}
            <Link
              href="https://www.richardson.co.nz"
              isExternal
              textDecoration="underline"
            >
              Sam Richardson
            </Link>
          </Text>
        </Box>
      </Flex>
    </div>
  );
};

export default Home;
